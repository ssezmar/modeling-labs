import random
import numpy as np
import streamlit as st

# ====== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ======
st.set_page_config(page_title="–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", layout="centered")
st.markdown(
    "<h1 style='text-align: center; color: #4C78A8;'>üìä –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ</h1>",
    unsafe_allow_html=True
)

# ====== –°—Ç–∏–ª–∏ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –∏–Ω–ø—É—Ç–æ–≤ –±–µ–∑ —Å—Ç—Ä–µ–ª–æ–∫ ======
st.markdown("""
<style>
/* –£–º–µ–Ω—å—à–∞–µ–º —à–∏—Ä–∏–Ω—É –∏–Ω–ø—É—Ç–æ–≤ */
input[type=number] {
    width: 90px !important;
}

/* –ü—Ä—è—á–µ–º —Å—Ç—Ä–µ–ª–æ—á–∫–∏ –¥–ª—è Chrome, Safari, Edge */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* –ü—Ä—è—á–µ–º —Å—Ç—Ä–µ–ª–æ—á–∫–∏ –¥–ª—è Firefox */
input[type=number] {
    -moz-appearance: textfield;
}
</style>
""", unsafe_allow_html=True)

# ====== –ò–Ω–ø—É—Ç—ã –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å placeholder ======
col1, col2, col3 = st.columns([1, 1, 1])
with col1:
    a = st.number_input("", value=2.0, step=0.1, format="%.2f", placeholder="a")
with col2:
    b = st.number_input("", value=5.0, step=0.1, format="%.2f", placeholder="b")
with col3:
    N = st.number_input("", value=100, min_value=1, step=1, placeholder="N")

# ====== –ü—Ä–æ–≤–µ—Ä–∫–∞ ======
if a >= b:
    st.error("‚ùå a –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ b")
else:
    # ====== –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–±–æ—Ä–∫–∏ ======
    samples = [random.uniform(a, b) for _ in range(N)]

    # –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    Mx = (a + b) / 2
    g = ((b - a) ** 2) / 12

    # –í—ã–±–æ—Ä–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    m = sum(samples) / N
    Dx = sum((x - m) ** 2 for x in samples) / N

    # Œî1, Œî2
    delta_m = abs(m - Mx)
    delta_g = abs(Dx - g)

    # ====== –í—ã–≤–æ–¥ Œî1 –∏ Œî2 –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É ======
    st.markdown("---")
    c1, c2 = st.columns(2)
    with c1:
        st.markdown(
            f"""
            <div style="
                text-align:center;
                padding:15px;
                background-color:#F5F9FF;
                border:2px solid #4C78A8;
                border-radius:10px;
                font-size:18px;">
                <b>Œî1:</b> {delta_m:.6f}
            </div>
            """,
            unsafe_allow_html=True
        )
    with c2:
        st.markdown(
            f"""
            <div style="
                text-align:center;
                padding:15px;
                background-color:#F5F9FF;
                border:2px solid #4C78A8;
                border-radius:10px;
                font-size:18px;">
                <b>Œî2:</b> {delta_g:.6f}
            </div>
            """,
            unsafe_allow_html=True
        )
    st.markdown("---")

    # ====== –¢–∞–±–ª–∏—Ü–∞ ======
    first_20 = samples[:20]
    first_20_arr = np.array(first_20).reshape(4, 5)
    first_20_str = [[f"{v:.6f}" for v in row] for row in first_20_arr]

    table_html = """
    <style>
    table {
        border-collapse: collapse;
        width: 100%;
        font-size: 14px;
    }
    th {
        background-color: #4C78A8;
        color: white;
        padding: 8px;
        text-align: center;
        border: 1px solid #ddd;
    }
    td {
        padding: 8px;
        border: 1px solid #ddd;
        text-align: center;
    }
    tr:nth-child(even) {
        background-color: #f2f2f2;
    }
    </style>
    <h3 style="color:#4C78A8;">üìã –ü–µ—Ä–≤—ã–µ 20 –∑–Ω–∞—á–µ–Ω–∏–π</h3>
    <table>
        <tr>
    """

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
    for j in range(5):
        table_html += f"<th>–ö–æ–ª–æ–Ω–∫–∞ {j+1}</th>"
    table_html += "</tr>"

    # –î–∞–Ω–Ω—ã–µ
    for row in first_20_str:
        table_html += "<tr>" + "".join(f"<td>{val}</td>" for val in row) + "</tr>"

    table_html += "</table>"

    st.markdown(table_html, unsafe_allow_html=True)