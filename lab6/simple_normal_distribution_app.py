
import random
import numpy as np
import streamlit as st
import matplotlib.pyplot as plt
from scipy import stats
import seaborn as sns

# ====== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ======
st.set_page_config(
    page_title="üî¨ –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ - –ê–Ω–∞–ª–∏–∑", 
    layout="wide"
)

# ====== –ó–∞–≥–æ–ª–æ–≤–æ–∫ ======
st.markdown("""
<div style="
    background: linear-gradient(90deg, #4f46e5 0%, #7c3aed 100%);
    padding: 2rem;
    border-radius: 15px;
    margin-bottom: 2rem;
    text-align: center;
    box-shadow: 0 8px 32px rgba(79, 70, 229, 0.3);
">
    <h1 style="color: white; margin: 0; font-size: 2.8rem; font-weight: 700;">
        üî¨ –ê–Ω–∞–ª–∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    </h1>
    <p style="color: rgba(255,255,255,0.9); margin: 1rem 0 0 0; font-size: 1.3rem;">
        –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å –º–µ—Ä–∞–º–∏ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
    </p>
</div>
""", unsafe_allow_html=True)

# ====== –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ sidebar ======
with st.sidebar:
    st.markdown("## ‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã")

    mu = st.number_input(
        "Œº (—Å—Ä–µ–¥–Ω–µ–µ)", 
        value=0.0, 
        step=0.1, 
        format="%.4f"
    )

    sigma = st.number_input(
        "œÉ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ)", 
        value=1.0, 
        step=0.1, 
        min_value=0.0001, 
        format="%.4f"
    )

    N = st.number_input(
        "N (—Ä–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏)", 
        value=1000, 
        min_value=10, 
        max_value=1000000,
        step=50
    )

    seed = st.number_input("Seed", value=42, step=1)

    if st.button("üé≤ –ù–æ–≤–∞—è –≤—ã–±–æ—Ä–∫–∞", type="primary"):
        st.rerun()

# ====== –ü—Ä–æ–≤–µ—Ä–∫–∞ ======
if sigma <= 0:
    st.error("‚ùå œÉ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
    st.stop()

# ====== –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö ======
random.seed(seed)
np.random.seed(seed)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–±–æ—Ä–∫–∏
samples = [random.normalvariate(mu, sigma) for _ in range(N)]

# –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
Mx_theor = mu
Dx_theor = sigma ** 2
sigma_theor = sigma

# –í—ã–±–æ—Ä–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
m_sample = sum(samples) / N
Dx_sample = sum((x - m_sample) ** 2 for x in samples) / N
sigma_sample = np.sqrt(Dx_sample)

# ====== –ú–ï–†–´ –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø ======
delta1 = abs(m_sample - Mx_theor)          # –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ —Å—Ä–µ–¥–Ω–µ–º—É
delta2 = abs(Dx_sample - Dx_theor)         # –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ –¥–∏—Å–ø–µ—Ä—Å–∏–∏  
delta3 = abs(sigma_sample - sigma_theor)   # –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ —Å—Ç. –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—é

# –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
rel_error_mean = (delta1 / abs(Mx_theor) * 100) if Mx_theor != 0 else (delta1 * 100)
rel_error_var = (delta2 / Dx_theor * 100)
rel_error_std = (delta3 / sigma_theor * 100)

# ====== –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –úER –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø ======  
st.markdown("## üéØ –ú–µ—Ä—ã —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è")

col1, col2, col3 = st.columns(3)

with col1:
    st.markdown(f"""
    <div style="
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        padding: 2rem;
        border-radius: 20px;
        text-align: center;
        color: white;
        box-shadow: 0 10px 30px rgba(59, 130, 246, 0.3);
        transform: translateY(0);
        transition: transform 0.3s ease;
    ">
        <h2 style="margin: 0; font-size: 1.5rem; font-weight: 600;">Œî‚ÇÅ</h2>
        <p style="margin: 0.5rem 0; font-size: 0.9rem; opacity: 0.9;">
            –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ —Å—Ä–µ–¥–Ω–µ–º—É
        </p>
        <p style="
            font-size: 2.5rem; 
            font-weight: 700; 
            margin: 1rem 0; 
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        ">
            {delta1:.8f}
        </p>
        <div style="
            background: rgba(255,255,255,0.2);
            padding: 0.5rem;
            border-radius: 10px;
            margin-top: 1rem;
        ">
            <p style="margin: 0; font-size: 0.9rem;">
                –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:<br>
                <strong>{rel_error_mean:.6f}%</strong>
            </p>
        </div>
    </div>
    """, unsafe_allow_html=True)

with col2:
    st.markdown(f"""
    <div style="
        background: linear-gradient(135deg, #ec4899, #be185d);
        padding: 2rem;
        border-radius: 20px;
        text-align: center;
        color: white;
        box-shadow: 0 10px 30px rgba(236, 72, 153, 0.3);
    ">
        <h2 style="margin: 0; font-size: 1.5rem; font-weight: 600;">Œî‚ÇÇ</h2>
        <p style="margin: 0.5rem 0; font-size: 0.9rem; opacity: 0.9;">
            –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ –¥–∏—Å–ø–µ—Ä—Å–∏–∏
        </p>
        <p style="
            font-size: 2.5rem; 
            font-weight: 700; 
            margin: 1rem 0;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        ">
            {delta2:.8f}
        </p>
        <div style="
            background: rgba(255,255,255,0.2);
            padding: 0.5rem;
            border-radius: 10px;
            margin-top: 1rem;
        ">
            <p style="margin: 0; font-size: 0.9rem;">
                –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:<br>
                <strong>{rel_error_var:.6f}%</strong>
            </p>
        </div>
    </div>
    """, unsafe_allow_html=True)

with col3:
    st.markdown(f"""
    <div style="
        background: linear-gradient(135deg, #10b981, #047857);
        padding: 2rem;
        border-radius: 20px;
        text-align: center;
        color: white;
        box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);
    ">
        <h2 style="margin: 0; font-size: 1.5rem; font-weight: 600;">Œî‚ÇÉ</h2>
        <p style="margin: 0.5rem 0; font-size: 0.9rem; opacity: 0.9;">
            –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ —Å—Ç. –æ—Ç–∫–ª.
        </p>
        <p style="
            font-size: 2.5rem; 
            font-weight: 700; 
            margin: 1rem 0;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        ">
            {delta3:.8f}
        </p>
        <div style="
            background: rgba(255,255,255,0.2);
            padding: 0.5rem;
            border-radius: 10px;
            margin-top: 1rem;
        ">
            <p style="margin: 0; font-size: 0.9rem;">
                –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:<br>
                <strong>{rel_error_std:.6f}%</strong>
            </p>
        </div>
    </div>
    """, unsafe_allow_html=True)

# ====== –û–°–ù–û–í–ù–´–ï –ú–ï–¢–†–ò–ö–ò ======
st.markdown("## üìä –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")

col1, col2, col3, col4 = st.columns(4)

with col1:
    st.metric(
        "üìà –í—ã–±–æ—Ä–æ—á–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ",
        f"{m_sample:.6f}",
        delta=f"{m_sample - Mx_theor:+.6f}",
        help=f"–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ: {Mx_theor}"
    )

with col2:
    st.metric(
        "üìä –í—ã–±–æ—Ä–æ—á–Ω–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è", 
        f"{Dx_sample:.6f}",
        delta=f"{Dx_sample - Dx_theor:+.6f}",
        help=f"–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è: {Dx_theor:.6f}"
    )

with col3:
    st.metric(
        "üìè –í—ã–±–æ—Ä–æ—á–Ω–æ–µ —Å—Ç. –æ—Ç–∫–ª.",
        f"{sigma_sample:.6f}",
        delta=f"{sigma_sample - sigma_theor:+.6f}",
        help=f"–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ: {sigma_theor}"
    )

with col4:
    st.metric(
        "üî¢ –†–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏",
        f"{N:,}",
        help="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π"
    )

# ====== –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–Ø ======
st.markdown("## üìà –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è")

# –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(15, 10))

# 1. –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Å —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∫—Ä–∏–≤–æ–π
ax1.hist(samples, bins=min(50, N//20), density=True, alpha=0.7, color='skyblue', edgecolor='black')
x_theory = np.linspace(min(samples), max(samples), 200)
y_theory = stats.norm.pdf(x_theory, mu, sigma)
ax1.plot(x_theory, y_theory, 'r-', linewidth=3, label=f'N({mu}, {sigma}¬≤)')
ax1.set_title('–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Å —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∫—Ä–∏–≤–æ–π', fontsize=14, fontweight='bold')
ax1.set_xlabel('–ó–Ω–∞—á–µ–Ω–∏—è')
ax1.set_ylabel('–ü–ª–æ—Ç–Ω–æ—Å—Ç—å')
ax1.legend()
ax1.grid(True, alpha=0.3)

# 2. Q-Q Plot
stats.probplot(samples, dist=stats.norm, sparams=(mu, sigma), plot=ax2)
ax2.set_title('Q-Q Plot (–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏)', fontsize=14, fontweight='bold')
ax2.grid(True, alpha=0.3)

# 3. –í—Ä–µ–º–µ–Ω–Ω–æ–π —Ä—è–¥ (–ø–µ—Ä–≤—ã–µ 200 —Ç–æ—á–µ–∫)
show_n = min(200, N)
ax3.plot(range(show_n), samples[:show_n], 'b-', alpha=0.7, linewidth=1)
ax3.axhline(y=m_sample, color='red', linestyle='--', label=f'–í—ã–±–æ—Ä–æ—á–Ω–æ–µ Œº = {m_sample:.4f}')
ax3.axhline(y=mu, color='green', linestyle=':', label=f'–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ Œº = {mu}')
ax3.set_title(f'–í—Ä–µ–º–µ–Ω–Ω–æ–π —Ä—è–¥ (–ø–µ—Ä–≤—ã–µ {show_n} –∑–Ω–∞—á–µ–Ω–∏–π)', fontsize=14, fontweight='bold')
ax3.set_xlabel('–ù–æ–º–µ—Ä –Ω–∞–±–ª—é–¥–µ–Ω–∏—è')
ax3.set_ylabel('–ó–Ω–∞—á–µ–Ω–∏–µ')
ax3.legend()
ax3.grid(True, alpha=0.3)

# 4. Boxplot
ax4.boxplot(samples, vert=True, patch_artist=True, 
           boxprops=dict(facecolor='lightcoral', alpha=0.7),
           medianprops=dict(color='black', linewidth=2))
ax4.set_title('–î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞–∑–º–∞—Ö–æ–≤', fontsize=14, fontweight='bold')
ax4.set_ylabel('–ó–Ω–∞—á–µ–Ω–∏—è')
ax4.grid(True, alpha=0.3)

plt.tight_layout()
st.pyplot(fig)

# ====== –ü–û–î–†–û–ë–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ======
st.markdown("## üìã –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

col1, col2 = st.columns(2)

with col1:
    st.markdown("### üéØ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫")

    comparison_data = {
        "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞": ["–°—Ä–µ–¥–Ω–µ–µ", "–î–∏—Å–ø–µ—Ä—Å–∏—è", "–°—Ç. –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ"],
        "–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ": [f"{Mx_theor:.8f}", f"{Dx_theor:.8f}", f"{sigma_theor:.8f}"],
        "–í—ã–±–æ—Ä–æ—á–Ω–æ–µ": [f"{m_sample:.8f}", f"{Dx_sample:.8f}", f"{sigma_sample:.8f}"],
        "–ê–±—Å. —Ä–∞–∑–Ω–æ—Å—Ç—å": [f"{delta1:.8f}", f"{delta2:.8f}", f"{delta3:.8f}"],
        "–û—Ç–Ω. –æ—à–∏–±–∫–∞ (%)": [f"{rel_error_mean:.6f}", f"{rel_error_var:.6f}", f"{rel_error_std:.6f}"]
    }

    st.dataframe(comparison_data, use_container_width=True, hide_index=True)

with col2:
    st.markdown("### üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")

    additional_stats = {
        "–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": [
            "–ú–∏–Ω–∏–º—É–º",
            "1-–π –∫–≤–∞—Ä—Ç–∏–ª—å", 
            "–ú–µ–¥–∏–∞–Ω–∞",
            "3-–π –∫–≤–∞—Ä—Ç–∏–ª—å",
            "–ú–∞–∫—Å–∏–º—É–º",
            "–†–∞–∑–º–∞—Ö",
            "–ê—Å–∏–º–º–µ—Ç—Ä–∏—è",
            "–≠–∫—Å—Ü–µ—Å—Å"
        ],
        "–ó–Ω–∞—á–µ–Ω–∏–µ": [
            f"{np.min(samples):.6f}",
            f"{np.percentile(samples, 25):.6f}",
            f"{np.median(samples):.6f}",
            f"{np.percentile(samples, 75):.6f}",
            f"{np.max(samples):.6f}",
            f"{np.max(samples) - np.min(samples):.6f}",
            f"{stats.skew(samples):.6f}",
            f"{stats.kurtosis(samples):.6f}"
        ]
    }

    st.dataframe(additional_stats, use_container_width=True, hide_index=True)

# ====== –ü–ï–†–í–´–ï 20 –ó–ù–ê–ß–ï–ù–ò–ô ======
st.markdown("### üî¢ –ü–µ—Ä–≤—ã–µ 20 —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π")

first_20 = samples[:20]
rows_data = []
for i in range(0, len(first_20), 5):
    row = first_20[i:i+5]
    while len(row) < 5:
        row.append("")
    rows_data.append([f"{val:.6f}" if val != "" else "" for val in row])

first_20_df = {f"–ü–æ–∑–∏—Ü–∏—è {i+1}": [row[i] for row in rows_data] for i in range(5)}

st.dataframe(first_20_df, use_container_width=True, hide_index=True)

# ====== –ò–ù–¢–ï–†–ü–†–ï–¢–ê–¶–ò–Ø ======
st.markdown("## üí° –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

if all(err < 5.0 for err in [rel_error_mean, rel_error_var, rel_error_std]):
    st.success("""
    ‚úÖ **–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ!** 

    –í—Å–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –º–µ–Ω–µ–µ 5%, —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ —Ö–æ—Ä–æ—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª 
    –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ –≤—ã–±–æ—Ä–∫–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.
    """)
elif all(err < 10.0 for err in [rel_error_mean, rel_error_var, rel_error_std]):
    st.info("""
    ‚ÑπÔ∏è **–•–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ**

    –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–∏–µ–º–ª–µ–º—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö (< 10%). 
    –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –≤—ã–±–æ—Ä–∫–∏ –º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å –æ—Ü–µ–Ω–æ–∫.
    """)
else:
    st.warning("""
    ‚ö†Ô∏è **–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è**

    –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π. 
    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
    """)

# ====== FOOTER ======
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #666; padding: 2rem;">
    <h4>üî¨ –ê–Ω–∞–ª–∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è</h4>
    <p>
        <strong>Œî‚ÇÅ</strong> = |xÃÑ - Œº| ‚Äî –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ä–µ–¥–Ω–∏—Ö<br>
        <strong>Œî‚ÇÇ</strong> = |s¬≤ - œÉ¬≤| ‚Äî –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–æ—á–Ω–æ–π –∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–π<br>
        <strong>Œî‚ÇÉ</strong> = |s - œÉ| ‚Äî –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π
    </p>
    <p><em>–°–æ–∑–¥–∞–Ω–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Streamlit, NumPy, SciPy –∏ Matplotlib</em></p>
</div>
""", unsafe_allow_html=True)
